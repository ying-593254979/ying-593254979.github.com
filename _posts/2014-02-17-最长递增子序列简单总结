---

layout: post
categories: [Algorithms]
tags: [算法, 最长递增子序列, LIS]

---

###问题:  
有一个长为n的数列a[0], a[1], ..., a[n-1]. 请求出这个序列中最长的上升子序列的长度. 上升子序列指的是对于任意的i < j都满足a[i] < a[j]的子序列.  
限制条件:  

- 1 <= n <= 1000  
- 0 <= a[i] <= 1000000  

###动态规划解法  
动态规划解决问题的步骤一般如下:  

- 确定是否满足无后效性和最优子结构性质以及是否存在较多子问题重叠, 这些是问题是否可以使用动态规划的先决条件.  
- 状态的表示: 注意设计的状态要满足无后效性, 可以通过增加维数的方式消除无后效性, 另一个原则是在保证无后效性的前提下尽量得到更多的在重叠子问题.  
- 设计状态迁移方程: 状态迁移来源于最优子结构性质, 状态迁移方程实际上就是通过子问题求解父问题的等式关系.  
- 两种实现: 记忆化搜索, 递推. 前者的好处是书写简单, 后者的好处是可以使用滚动数组等手段进行优化.    

看一下如何应用到LIS问题上.  
